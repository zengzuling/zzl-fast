<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xin.cymall.dao.SysUserInfoDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="xin.cymall.entity.SysUserInfo" id="sysUserInfoMap">
        <result property="userInfoId" column="user_info_id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="email" column="email"/>
        <result property="mobile" column="mobile"/>
        <result property="address" column="address"/>
        <result property="status" column="status"/>
        <result property="createUserId" column="create_user_id"/>
        <result property="createTime" column="create_time"/>
		<result property="updateTime" column="update_time"/>
        <result property="roleId" column="role_id"/>
        <result property="orgId" column="org_id"/>
    </resultMap>

	<select id="get" resultType="xin.cymall.entity.SysUserInfo">
		select * from sys_user_info where user_info_id = #{value}
	</select>

	<select id="getList" resultType="xin.cymall.entity.SysUserInfo">
		select * from sys_user_info t <include refid="where_clause" />
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by user_info_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="getCount" resultType="int">
		select count(*) from sys_user_info t  <include refid="where_clause" />
	</select>

    <!-- 搜索数据区域 -->
    <sql id="where_clause">
        <where>
            1=1
            <if test="userInfoId != null and userInfoId != ''"> and t.user_info_id = #{userInfoId} </if>
    		<if test="userInfoIdVague != null and userInfoIdVague != ''"> and t.user_info_id like concat('%',#{userInfoIdVague},'%') </if>
            <if test="username != null and username != ''"> and t.username = #{username} </if>
    		<if test="usernameVague != null and usernameVague != ''"> and t.username like concat('%',#{usernameVague},'%') </if>
            <if test="password != null and password != ''"> and t.password = #{password} </if>
    		<if test="passwordVague != null and passwordVague != ''"> and t.password like concat('%',#{passwordVague},'%') </if>
            <if test="email != null and email != ''"> and t.email = #{email} </if>
    		<if test="emailVague != null and emailVague != ''"> and t.email like concat('%',#{emailVague},'%') </if>
            <if test="mobile != null and mobile != ''"> and t.mobile = #{mobile} </if>
    		<if test="mobileVague != null and mobileVague != ''"> and t.mobile like concat('%',#{mobileVague},'%') </if>
            <if test="address != null and address != ''"> and t.address = #{address} </if>
    		<if test="addressVague != null and addressVague != ''"> and t.address like concat('%',#{addressVague},'%') </if>
            <if test="status != null and status != ''"> and t.status = #{status} </if>
    		<if test="statusVague != null and statusVague != ''"> and t.status like concat('%',#{statusVague},'%') </if>
            <if test="createUserId != null and createUserId != ''"> and t.create_user_id = #{createUserId} </if>
    		<if test="createUserIdVague != null and createUserIdVague != ''"> and t.create_user_id like concat('%',#{createUserIdVague},'%') </if>
            <if test="createTime != null and createTime != ''"> and t.create_time = #{createTime} </if>
    		<if test="createTimeVague != null and createTimeVague != ''"> and t.create_time like concat('%',#{createTimeVague},'%') </if>
			<if test="updateTime != null and updateTime != ''"> and t.update_time = #{updateTime} </if>
			<if test="updateTimeVague != null and updateTimeVague != ''"> and t.update_time like concat('%',#{updateTimeVague},'%') </if>
            <if test="roleId != null and roleId != ''"> and t.role_id = #{roleId} </if>
    		<if test="roleIdVague != null and roleIdVague != ''"> and t.role_id like concat('%',#{roleIdVague},'%') </if>
            <if test="orgId != null and orgId != ''"> and t.org_id = #{orgId} </if>
    		<if test="orgIdVague != null and orgIdVague != ''"> and t.org_id like concat('%',#{orgIdVague},'%') </if>
        </where>
    </sql>
	 
	<insert id="save" parameterType="xin.cymall.entity.SysUserInfo">
		insert into sys_user_info
		(
			`user_info_id`, 
			`username`, 
			`password`, 
			`email`, 
			`mobile`, 
			`address`, 
			`status`, 
			`create_user_id`, 
			`create_time`,
			`update_time`,
			`role_id`, 
			`org_id`
		)
		values
		(
			#{userInfoId}, 
			#{username}, 
			#{password}, 
			#{email}, 
			#{mobile}, 
			#{address}, 
			#{status}, 
			#{createUserId}, 
			#{createTime},
			#{updateTime},
			#{roleId}, 
			#{orgId}
		)
	</insert>
	 
	<update id="update" parameterType="xin.cymall.entity.SysUserInfo">
		update sys_user_info 
		<set>
			<if test="username != null">`username` = #{username}, </if>
			<if test="password != null">`password` = #{password}, </if>
			<if test="email != null">`email` = #{email}, </if>
			<if test="mobile != null">`mobile` = #{mobile}, </if>
			<if test="address != null">`address` = #{address}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="createUserId != null">`create_user_id` = #{createUserId}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="roleId != null">`role_id` = #{roleId}, </if>
			<if test="orgId != null">`org_id` = #{orgId}</if>
		</set>
		where user_info_id = #{userInfoId}
	</update>
	
	<delete id="delete">
		delete from sys_user_info where user_info_id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from sys_user_info where user_info_id in 
		<foreach item="userInfoId" collection="array" open="(" separator="," close=")">
			#{userInfoId}
		</foreach>
	</delete>

</mapper>